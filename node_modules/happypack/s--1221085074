'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _mobxReact = require('mobx-react');

var _graphCard = require('../components/graphCard');

var _graphCard2 = _interopRequireDefault(_graphCard);

var _antd = require('antd');

require('./index.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var pageSize = 9; //一页展示的数目

var GraphList = (_dec = (0, _mobxReact.observer)(['graphStore']), _dec(_class = function (_Component) {
    _inherits(GraphList, _Component);

    function GraphList(props) {
        _classCallCheck(this, GraphList);

        return _possibleConstructorReturn(this, (GraphList.__proto__ || Object.getPrototypeOf(GraphList)).call(this, props));
    }

    _createClass(GraphList, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _props$graphStore = this.props.graphStore,
                getList = _props$graphStore.getList,
                curPage = _props$graphStore.curPage;


            getList({
                pageNum: curPage,
                pageSize: pageSize
            }); //获取数据
        }
    }, {
        key: 'handlePageChange',
        value: function handlePageChange(pageNumber) {
            var changePage = this.props.graphStore.changePage;


            changePage(pageNumber - 1);
        }
    }, {
        key: 'render',
        value: function render() {
            var _props$graphStore2 = this.props.graphStore,
                list = _props$graphStore2.list,
                pageLen = _props$graphStore2.pageLen,
                errorTip = _props$graphStore2.errorTip,
                curPage = _props$graphStore2.curPage;


            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'm-list-wrap' },
                    list.map(function (item) {
                        return _react2.default.createElement(_graphCard2.default, _extends({ extraClass: 'm-graph-card' }, item, { key: item.id }));
                    })
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'm-paginate' },
                    _react2.default.createElement(_antd.Pagination, {
                        showQuickJumper: true,
                        defaultCurrent: curPage,
                        total: 500,
                        onChange: onChange })
                )
            );
        }
    }]);

    return GraphList;
}(_react.Component)) || _class);
exports.default = GraphList;