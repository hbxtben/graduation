'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _desc, _value, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12;

var _mobx = require('mobx');

var _agent = require('../common/agent');

var _defaultOption = require('./const/defaultOption');

var _defaultOption2 = _interopRequireDefault(_defaultOption);

var _exampleData = require('./const/exampleData');

var _exampleData2 = _interopRequireDefault(_exampleData);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
        enumerable: descriptor.enumerable,
        configurable: descriptor.configurable,
        writable: descriptor.writable,
        value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
}

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
}

var DetailStore = (_class = function DetailStore() {
    _classCallCheck(this, DetailStore);

    _initDefineProp(this, 'detailData', _descriptor, this);

    _initDefineProp(this, 'options', _descriptor2, this);

    _initDefineProp(this, 'graphType', _descriptor3, this);

    _initDefineProp(this, 'step', _descriptor4, this);

    _initDefineProp(this, 'errtip', _descriptor5, this);

    _initDefineProp(this, 'setData', _descriptor6, this);

    _initDefineProp(this, 'changeStep', _descriptor7, this);

    _initDefineProp(this, 'chooseGraphType', _descriptor8, this);

    _initDefineProp(this, 'showExample', _descriptor9, this);

    _initDefineProp(this, 'changeGraphOptions', _descriptor10, this);

    _initDefineProp(this, 'setDetailData', _descriptor11, this);

    _initDefineProp(this, 'saveGraphData', _descriptor12, this);
}

//修改图表类型


//展示实例数据


//修改配置


//保存数据
, (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'detailData', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return "[]";
    }
}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, 'options', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return _defaultOption2.default;
    }
}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, 'graphType', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return "bar";
    }
}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, 'step', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return 0;
    }
}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, 'errtip', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return '';
    }
}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, 'setData', [_mobx.action], {
    enumerable: true,
    initializer: function initializer() {
        var _this = this;

        return function (data) {
            _this.detailData = data;
        };
    }
}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, 'changeStep', [_mobx.action], {
    enumerable: true,
    initializer: function initializer() {
        var _this2 = this;

        return function (step) {
            if (step > -1 && step < 3) {
                _this2.step = step;
            }
        };
    }
}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, 'chooseGraphType', [_mobx.action], {
    enumerable: true,
    initializer: function initializer() {
        var _this3 = this;

        return function (type) {
            _this3.graphType = type;
        };
    }
}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, 'showExample', [_mobx.action], {
    enumerable: true,
    initializer: function initializer() {
        var _this4 = this;

        return function (type) {
            var example = _exampleData2.default[type];

            _this4.detailData = JSON.stringify(example.data);
            _this4.options = _extends({}, _this4.options, example.options);
            _this4.graphType = example.graphType ? example.graphType : _this4.graphType;
        };
    }
}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, 'changeGraphOptions', [_mobx.action], {
    enumerable: true,
    initializer: function initializer() {
        var _this5 = this;

        return function (options) {
            _this5.options = _extends({}, _this5.options, options);
        };
    }
}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, 'setDetailData', [_mobx.action], {
    enumerable: true,
    initializer: function initializer() {
        return function (data) {
            return _agent.graphRequest.getGraphDetail(data).then(function (res) {
                var resData = res.data;
                return resData;
            });
        };
    }
}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, 'saveGraphData', [_mobx.action], {
    enumerable: true,
    initializer: function initializer() {
        return function (data) {
            return _agent.graphRequest.saveGraphData(data).then(function (res) {
                var resData = res.data;
                return resData;
            });
        };
    }
})), _class);


var detailStore = new DetailStore();

exports.default = detailStore;