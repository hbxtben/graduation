'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _mobxReact = require('mobx-react');

var _antd = require('antd');

var _reactRouterDom = require('react-router-dom');

var _userForm = require('../userForm');

var _userForm2 = _interopRequireDefault(_userForm);

require('./index.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//模块类型
var LOGIN = "login";
var SIGNIN = "signin";

var User = (_dec = (0, _mobxReact.observer)(['userStore', 'navStore']), (0, _reactRouterDom.withRouter)(_class = _dec(_class = function (_Component) {
    _inherits(User, _Component);

    function User(props) {
        _classCallCheck(this, User);

        var _this = _possibleConstructorReturn(this, (User.__proto__ || Object.getPrototypeOf(User)).call(this, props));

        _this.showModal = function (formType) {
            _this.setState({
                showModal: true,
                formType: formType
            });
        };

        _this.handleCancle = function () {
            _this.setState({ showModal: false });
        };

        _this.handleSubmit = function () {
            var form = _this.formRef.props.form;
            var validFileds = [],
                cb = null; //表单的回调函数

            if (_this.state.formType === LOGIN) {
                validFileds = ['username', 'password'];
                cb = _this.login;
            } else {
                validFileds = ['username', 'password', 'nickname'];
                cb = _this.signin;
            }

            form.validateFields(validFileds, function (err, values) {
                if (err) {
                    return;
                }

                form.resetFields();
                _this.setState({ showModal: false });

                cb && cb(values);
            });
        };

        _this.saveFormRef = function (formRef) {
            _this.formRef = formRef;
        };

        _this.login = function (values) {
            var doLogin = _this.props.userStore.doLogin;

            doLogin(values);
        };

        _this.logout = function () {
            var _this$props = _this.props,
                userStore = _this$props.userStore,
                navStore = _this$props.navStore;


            userStore.doLogout();

            navStore.changeNav('/');
            _this.props.history.push('/'); //退出登陆，默认返回首页
        };

        _this.signin = function (values) {
            var doSign = _this.props.userStore.doSign;

            doSign(values);
        };

        _this.changeToAnother = function (type) {
            _this.showModal(type || LOGIN);
        };

        _this.getContent = function () {
            var _this$props$userStore = _this.props.userStore,
                loginTag = _this$props$userStore.loginTag,
                nickname = _this$props$userStore.nickname,
                doLogin = _this$props$userStore.doLogin;

            var content = null;

            if (loginTag) {
                content = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(_antd.Avatar, { size: 'small', icon: 'user' }),
                    _react2.default.createElement(
                        'span',
                        { style: { marginLeft: '5px' } },
                        nickname
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'u-split-line' },
                        '/'
                    ),
                    _react2.default.createElement(
                        'a',
                        { onClick: _this.logout },
                        _react2.default.createElement(_antd.Icon, { type: 'logout' }),
                        _react2.default.createElement(
                            'span',
                            { className: 'icon-text' },
                            '\u9000\u51FA'
                        )
                    )
                );
            } else {
                content = _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'a',
                        { onClick: function onClick() {
                                return _this.showModal(LOGIN);
                            } },
                        _react2.default.createElement(_antd.Icon, { type: 'login' }),
                        _react2.default.createElement(
                            'span',
                            { className: 'icon-text' },
                            '\u767B\u9646'
                        )
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'u-split-line' },
                        '/'
                    ),
                    _react2.default.createElement(
                        'a',
                        { onClick: function onClick() {
                                return _this.showModal(SIGNIN);
                            } },
                        _react2.default.createElement(_antd.Icon, { type: 'user-add' }),
                        _react2.default.createElement(
                            'span',
                            { className: 'icon-text' },
                            '\u6CE8\u518C'
                        )
                    )
                );
            }

            return content;
        };

        _this.state = {
            showModal: false,
            formType: ''
        };
        return _this;
    }

    //展示表单模块


    //隐藏表单模块


    //提交处理


    //保存modal节点


    //登陆执行


    //退出


    //注册执行


    //从当前框跳转到其他框


    //根据当前用户登陆状态展示界面


    _createClass(User, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { className: 'm-nav-right' },
                _react2.default.createElement(
                    'div',
                    { className: 'user-info' },
                    this.getContent(),
                    _react2.default.createElement(_userForm2.default, {
                        changeToAnother: this.changeToAnother,
                        wrappedComponentRef: this.saveFormRef,
                        formType: this.state.formType,
                        visible: this.state.showModal,
                        onCancel: this.handleCancle,
                        onCreate: this.handleSubmit
                    })
                )
            );
        }
    }]);

    return User;
}(_react.Component)) || _class) || _class);
exports.default = User;