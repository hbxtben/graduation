'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getGraphImg = exports.graphDraw = undefined;

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

// 引入柱状图,折线图，饼图


// 引入组件


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _echarts = require('echarts/lib/echarts');

var _echarts2 = _interopRequireDefault(_echarts);

require('echarts/lib/chart/bar');

require('echarts/lib/chart/line');

require('echarts/lib/chart/pie');

require('echarts/lib/component/tooltip');

require('echarts/lib/component/title');

require('echarts/lib/component/toolbox');

require('echarts/lib/component/legend');

var _mobx = require('mobx');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var graphWrapCache = null;

var myEchart = null;

//绘图
var graphDraw = exports.graphDraw = function graphDraw(_ref) {
    var detailData = _ref.detailData,
        options = _ref.options,
        graphType = _ref.graphType,
        graphWrap = _ref.graphWrap;

    var data = [];

    try {
        data = JSON.parse((0, _mobx.toJS)(detailData)); //数据
    } catch (e) {
        _message3.default.error("输入数据不合法", 2);

        return;
    }

    //动态添加series
    var getSeries = function getSeries() {
        var result = [];

        if (data.length > 0) {
            var nums = data[0].length - 1;

            for (var seriesNum = 0; seriesNum < nums; seriesNum++) {
                result.push({ type: graphType });
            }
        }

        return result;
    };

    myEchart = _echarts2.default.init(graphWrap);
    var graphOptions = _extends({}, (0, _mobx.toJS)(options), {
        dataset: {
            source: data
        },
        series: getSeries()
    });

    console.log("draw echarts data", JSON.stringify(data));

    //第二个参数代表新数据不与之前的数据合并
    myEchart.setOption(graphOptions, true);
};

var getGraphImg = exports.getGraphImg = function getGraphImg() {
    if (!myEchart) {
        return "";
    } else {
        return myEchart.getDataURL({
            type: 'jpeg'
        });
    }
};